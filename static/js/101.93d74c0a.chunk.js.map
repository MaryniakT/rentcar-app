{"version":3,"file":"static/js/101.93d74c0a.chunk.js","mappings":"wMAEO,MAAMA,E,QAAiBC,EAAOC,OAAMC,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,6bAKhCC,GAASA,EAAMC,MAAMC,OAAOC,SAOPH,GAASA,EAAMC,MAAMG,UAAUC,c,wBCNhD,SAASC,IACtB,MAAMC,GAAWC,EAAAA,EAAAA,MACXC,GAAUC,EAAAA,EAAAA,IAAYC,EAAAA,IACtBC,GAAUF,EAAAA,EAAAA,IAAYG,EAAAA,IACtBC,GAAYJ,EAAAA,EAAAA,IAAYK,EAAAA,IACxBC,GAASN,EAAAA,EAAAA,IAAYO,EAAAA,KACpBC,EAAMC,IAAWC,EAAAA,EAAAA,WAAS,KAC/B,MAAMC,EAAYC,aAAaC,QAAQ,QACvC,OAAOF,EAAYG,SAASH,EAAW,IAAM,CAAC,KAIhDI,EAAAA,EAAAA,YAAU,KACRlB,GAASmB,EAAAA,EAAAA,KAAe,GACvB,CAACnB,IAEJ,MAAMoB,EAAiBlB,EAAQmB,MAAM,EANhB,GAMmBV,IAExCO,EAAAA,EAAAA,YAAU,KACRH,aAAaO,QAAQ,OAAQX,EAAKY,WAAW,GAC5C,CAACZ,IAMJ,OACEa,EAAAA,EAAAA,KAACC,EAAAA,GAAS,CAAAC,UACRC,EAAAA,EAAAA,MAACC,EAAAA,GAAO,CAAAF,SAAA,EACNF,EAAAA,EAAAA,KAACK,EAAAA,GAAM,KACPL,EAAAA,EAAAA,KAACM,EAAAA,GAAW,CAAC5B,QAASK,EAAYE,EAASW,IAC1Cb,GAAgC,KAAb,OAANE,QAAM,IAANA,OAAM,EAANA,EAAQsB,UACpBP,EAAAA,EAAAA,KAACQ,EAAAA,EAAK,CAAAN,SAAC,mIAKRN,EAAeW,OAAS7B,EAAQ6B,SAAW1B,IAAYE,IACtDiB,EAAAA,EAAAA,KAACpC,EAAc,CAAC6C,QAhBDC,KACrBtB,GAAQuB,GAAYA,EAAW,GAAE,EAeaT,SAAC,kBAKnD,C,iDCjDO,MAAMM,E,QAAQ3C,EAAO+C,EAAC7C,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,yFAClBC,GAASA,EAAMC,MAAMC,OAAOC,Q","sources":["pages/Catalog/Catalog.styled.jsx","pages/Catalog/Catalog.jsx","pages/Favorites/Favorites.styled.jsx"],"sourcesContent":["import styled from '@emotion/styled';\n\nexport const ButtonLoadMore = styled.button`\n  margin-top: 40px;\n  display: flex;\n  margin-left: auto;\n  margin-right: auto;\n  color: ${props => props.theme.colors.accent};\n  font-size: 16px;\n  font-weight: 500;\n  line-height: 150%;\n  text-decoration-line: underline;\n  transition-property: transform, color;\n  transition-duration: 0.25s;\n  transition-timing-function: ${props => props.theme.animation.cubicBezier};\n  &:hover {\n    transform: scale(1.02);\n    color: #dbb6da;\n  }\n  @media (min-width: 1440px) {\n    margin-top: 79px;\n  }\n`;","import { useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { filtredAdverts, selectAdverts, selectIsFiltred, selectLoading } from 'redux/selectors';\nimport { fetchAdverts } from 'redux/operations';\nimport { AdvertsList, Container, Filter, Section } from 'components';\nimport { ButtonLoadMore } from './Catalog.styled';\nimport { Empty } from 'pages/Favorites/Favorites.styled';\n\nexport default function Catalog() {\n  const dispatch = useDispatch();\n  const adverts = useSelector(selectAdverts);\n  const loading = useSelector(selectLoading);\n  const isFiltred = useSelector(selectIsFiltred);\n  const filter = useSelector(filtredAdverts);\n  const [page, setPage] = useState(() => {\n    const savedPage = localStorage.getItem('page');\n    return savedPage ? parseInt(savedPage, 10) : 1;\n  });\n  const itemsPerPage = 12;\n\n  useEffect(() => {\n    dispatch(fetchAdverts());\n  }, [dispatch]);\n\n  const visibleAdverts = adverts.slice(0, page * itemsPerPage);\n\n  useEffect(() => {\n    localStorage.setItem('page', page.toString());\n  }, [page]);\n\n  const handleLoadMore = () => {\n    setPage(prevPage => prevPage + 1);\n  };\n\n  return (\n    <Container>\n      <Section>\n        <Filter />\n        <AdvertsList adverts={isFiltred ? filter : visibleAdverts} />\n        {isFiltred && filter?.length === 0 && (\n          <Empty>\n            Sorry, no results were found for the filters you selected. You may want to consider\n            other search options to find the you want.\n          </Empty>\n        )}\n        {visibleAdverts.length < adverts.length && !loading && !isFiltred && (\n          <ButtonLoadMore onClick={handleLoadMore}>Load more</ButtonLoadMore>\n        )}\n      </Section>\n    </Container>\n  );\n}","import styled from '@emotion/styled';\n\nexport const Empty = styled.p`\n  color: ${props => props.theme.colors.accent};\n  font-size: 24px;\n  font-weight: 800;\n  text-align: center;\n`;"],"names":["ButtonLoadMore","styled","button","_templateObject","_taggedTemplateLiteral","props","theme","colors","accent","animation","cubicBezier","Catalog","dispatch","useDispatch","adverts","useSelector","selectAdverts","loading","selectLoading","isFiltred","selectIsFiltred","filter","filtredAdverts","page","setPage","useState","savedPage","localStorage","getItem","parseInt","useEffect","fetchAdverts","visibleAdverts","slice","setItem","toString","_jsx","Container","children","_jsxs","Section","Filter","AdvertsList","length","Empty","onClick","handleLoadMore","prevPage","p"],"sourceRoot":""}